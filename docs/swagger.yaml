basePath: /api
definitions:
  entity.ShoppingItem:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      family_id:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
      visibility:
        type: string
    type: object
  entity.TodoItem:
    properties:
      assigned_to:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deadline:
        type: string
      description:
        type: string
      family_id:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  entity.User:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
    type: object
  entity.WishlistItem:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      is_reserved:
        type: boolean
      link:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  response.Response:
    properties:
      message:
        type: string
    type: object
  v1.tokenResponse:
    properties:
      token:
        type: string
    type: object
  v1.userResponse:
    properties:
      email:
        type: string
      family_id:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server FamilyFlow server.
  title: Family Flow App
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Role
        in: body
        name: role
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register new user
      tags:
      - auth
  /email/compare:
    post:
      consumes:
      - application/json
      description: Compare verification code
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Code
        in: body
        name: code
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Verification code compared
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Compare verification code
      tags:
      - email
  /email/send:
    post:
      consumes:
      - application/json
      description: Send verification code
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Verification code sent
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send verification code
      tags:
      - email
  /family:
    post:
      consumes:
      - application/json
      description: Create family
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Family created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create family
      tags:
      - family
  /family/add:
    post:
      consumes:
      - application/json
      description: Add member to family
      parameters:
      - description: Email user
        in: body
        name: email_user
        required: true
        schema:
          type: string
      - description: Family ID
        in: body
        name: family_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Member added to family
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add member to family
      tags:
      - family
  /family/members:
    get:
      consumes:
      - application/json
      description: Get members
      parameters:
      - description: Family ID
        in: body
        name: familyId
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get members
      tags:
      - family
  /shopping:
    post:
      consumes:
      - application/json
      description: Create shopping item
      parameters:
      - description: Family ID
        in: body
        name: family_id
        required: true
        schema:
          type: string
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Visibility
        in: body
        name: visibility
        required: true
        schema:
          type: string
      - description: Created by
        in: body
        name: created_by
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Shopping item created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create shopping item
      tags:
      - shopping
  /shopping/{id}:
    delete:
      consumes:
      - application/json
      description: Delete shopping item
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Shopping item deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete shopping item
      tags:
      - shopping
    put:
      consumes:
      - application/json
      description: Update shopping item
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Visibility
        in: body
        name: visibility
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Shopping item updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update shopping item
      tags:
      - shopping
  /shopping/private:
    get:
      consumes:
      - application/json
      description: Get private shopping items by created by
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.ShoppingItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get private shopping items by created by
      tags:
      - shopping
  /shopping/public:
    get:
      consumes:
      - application/json
      description: Get public shopping items by family ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.ShoppingItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get public shopping items by family ID
      tags:
      - shopping
  /todo:
    post:
      consumes:
      - application/json
      description: Create todo
      parameters:
      - description: Family ID
        in: body
        name: family_id
        required: true
        schema:
          type: string
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Deadline
        in: body
        name: deadline
        required: true
        schema:
          type: string
      - description: Assigned to
        in: body
        name: assigned_to
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Todo created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create todo
      tags:
      - todo
  /todo/{id}:
    delete:
      consumes:
      - application/json
      description: Delete todo
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Todo deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete todo
      tags:
      - todo
    put:
      consumes:
      - application/json
      description: Update todo
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Deadline
        in: body
        name: deadline
        required: true
        schema:
          type: string
      - description: Assigned to
        in: body
        name: assigned_to
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Todo updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update todo
      tags:
      - todo
  /todo/assigned_to:
    get:
      consumes:
      - application/json
      description: Get todo by assigned to
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.TodoItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get todo by assigned to
      tags:
      - todo
  /todo/created_by:
    get:
      consumes:
      - application/json
      description: Get todo by created by
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.TodoItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get todo by created by
      tags:
      - todo
  /user:
    get:
      consumes:
      - application/json
      description: Get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get user info
      tags:
      - user
  /wishlist:
    get:
      consumes:
      - application/json
      description: Get wishlist items by user ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.WishlistItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get wishlist items by user ID
      tags:
      - wishlist
    post:
      consumes:
      - application/json
      description: Create wishlist item
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Link
        in: body
        name: link
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Is Reserved
        in: body
        name: is_reserved
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "201":
          description: Wishlist item created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create wishlist item
      tags:
      - wishlist
  /wishlist/{id}:
    delete:
      consumes:
      - application/json
      description: Delete wishlist item
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Wishlist item deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete wishlist item
      tags:
      - wishlist
    put:
      consumes:
      - application/json
      description: Update wishlist item
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Link
        in: body
        name: link
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Is Reserved
        in: body
        name: is_reserved
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Wishlist item updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update wishlist item
      tags:
      - wishlist
swagger: "2.0"
