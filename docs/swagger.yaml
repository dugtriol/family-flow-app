basePath: /api
definitions:
  entity.Chat:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      participants:
        items:
          $ref: '#/definitions/entity.ChatParticipant'
        type: array
    type: object
  entity.ChatParticipant:
    properties:
      chat_id:
        type: string
      id:
        type: string
      joined_at:
        type: string
      user_id:
        type: string
    type: object
  entity.Family:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  entity.Message:
    properties:
      chat_id:
        type: string
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      sender_id:
        type: string
    type: object
  entity.Notification:
    properties:
      body:
        type: string
      created_at:
        type: string
      data:
        type: string
      id:
        type: string
      is_read:
        type: boolean
      title:
        type: string
      user_id:
        type: string
    type: object
  entity.ShoppingItem:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      family_id:
        type: string
      id:
        type: string
      is_archived:
        type: boolean
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      visibility:
        type: string
    type: object
  entity.TodoItem:
    properties:
      assigned_to:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      deadline:
        type: string
      description:
        type: string
      family_id:
        type: string
      id:
        type: string
      is_archived:
        type: boolean
      point:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  entity.User:
    properties:
      email:
        type: string
      gender:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      point:
        type: integer
      role:
        type: string
    type: object
  entity.WishlistItem:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      is_archived:
        type: boolean
      link:
        type: string
      name:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  response.Response:
    properties:
      message:
        type: string
    type: object
  v1.ResetFamilyIdInput:
    properties:
      family_id:
        type: string
      id:
        type: string
    type: object
  v1.UpdateLocationInput:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    required:
    - latitude
    - longitude
    type: object
  v1.UpdatePasswordInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  v1.UpdateUserInput:
    type: object
  v1.inputAddParticipant:
    properties:
      user_id:
        type: string
    required:
    - user_id
    type: object
  v1.inputCreateChat:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  v1.inputCreateChatWithParticipants:
    properties:
      name:
        type: string
      participant_ids:
        items:
          type: string
        type: array
    required:
    - name
    - participant_ids
    type: object
  v1.tokenResponse:
    properties:
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server FamilyFlow server.
  title: Family Flow App
  version: "1.0"
paths:
  /auth/exists:
    get:
      consumes:
      - application/json
      description: Check if user exists by email
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Check if user exists by email
      tags:
      - user
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login
      tags:
      - auth
  /auth/password:
    put:
      consumes:
      - application/json
      description: Update user password
      parameters:
      - description: Update user password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.UpdatePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update user password
      tags:
      - user
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Role
        in: body
        name: role
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register new user
      tags:
      - auth
  /chats:
    post:
      consumes:
      - application/json
      description: Create a new chat
      parameters:
      - description: Chat data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.inputCreateChat'
      produces:
      - application/json
      responses:
        "200":
          description: Chat created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create chat
      tags:
      - chats
  /chats/{chatID}/messages:
    get:
      consumes:
      - application/json
      description: Get all messages for a specific chat
      parameters:
      - description: Chat ID
        in: path
        name: chatID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of messages
          schema:
            items:
              $ref: '#/definitions/entity.Message'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get messages by chat ID
      tags:
      - messages
  /chats/{chatID}/participants:
    post:
      consumes:
      - application/json
      description: Add a participant to a chat
      parameters:
      - description: Chat ID
        in: path
        name: chatID
        required: true
        type: string
      - description: Participant data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.inputAddParticipant'
      produces:
      - application/json
      responses:
        "200":
          description: Participant added
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add participant
      tags:
      - chats
  /chats/user:
    get:
      consumes:
      - application/json
      description: Get all chats for a user
      produces:
      - application/json
      responses:
        "200":
          description: List of chats
          schema:
            items:
              $ref: '#/definitions/entity.Chat'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get chats by user ID
      tags:
      - chats
  /chats/with-participants:
    post:
      consumes:
      - application/json
      description: Create a new chat with participants
      parameters:
      - description: Chat data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.inputCreateChatWithParticipants'
      produces:
      - application/json
      responses:
        "200":
          description: Chat created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create chat with participants
      tags:
      - chats
  /email/compare:
    post:
      consumes:
      - application/json
      description: Compare verification code
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Code
        in: body
        name: code
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Verification code compared
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Compare verification code
      tags:
      - email
  /email/send:
    post:
      consumes:
      - application/json
      description: Send verification code
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Verification code sent
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send verification code
      tags:
      - email
  /family:
    post:
      consumes:
      - application/json
      description: Create family
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Family created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create family
      tags:
      - family
  /family/{familyId}:
    get:
      consumes:
      - application/json
      description: Get family by ID
      parameters:
      - description: Family ID
        in: body
        name: familyId
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Family'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get family by ID
      tags:
      - family
  /family/add:
    post:
      consumes:
      - application/json
      description: Add member to family
      parameters:
      - description: Email user
        in: body
        name: email_user
        required: true
        schema:
          type: string
      - description: Family ID
        in: body
        name: family_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Member added to family
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Add member to family
      tags:
      - family
  /family/invite:
    post:
      consumes:
      - application/json
      description: Invite member to family
      parameters:
      - description: Email user
        in: body
        name: email_user
        required: true
        schema:
          type: string
      - description: Family ID
        in: body
        name: family_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Member added to family
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Invite member to family
      tags:
      - family
  /family/members:
    get:
      consumes:
      - application/json
      description: Get members
      parameters:
      - description: Family ID
        in: body
        name: familyId
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get members
      tags:
      - family
  /family/photo:
    put:
      consumes:
      - multipart/form-data
      description: Update family photo
      parameters:
      - description: Family ID
        in: formData
        name: familyId
        required: true
        type: string
      - description: Photo file
        in: formData
        name: photo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Photo updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update family photo
      tags:
      - family
  /notification:
    get:
      consumes:
      - application/json
      description: Get notifications for a specific user
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Notification'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get notifications by user ID
      tags:
      - notification
  /notification/save-fcm-token:
    post:
      consumes:
      - application/json
      description: Save FCM token for a user
      parameters:
      - description: User ID
        in: body
        name: userId
        required: true
        schema:
          type: string
      - description: FCM Token
        in: body
        name: fcmToken
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: FCM token saved successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Save FCM token
      tags:
      - notification
  /notification/send:
    post:
      consumes:
      - application/json
      description: Send notification to a user
      parameters:
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Notification sent successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Send notification
      tags:
      - notification
  /shopping:
    post:
      consumes:
      - application/json
      description: Create shopping item
      parameters:
      - description: Family ID
        in: body
        name: family_id
        required: true
        schema:
          type: string
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Visibility
        in: body
        name: visibility
        required: true
        schema:
          type: string
      - description: Created by
        in: body
        name: created_by
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Shopping item created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create shopping item
      tags:
      - shopping
  /shopping/{id}:
    delete:
      consumes:
      - application/json
      description: Delete shopping item
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Shopping item deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete shopping item
      tags:
      - shopping
    put:
      consumes:
      - application/json
      description: Update shopping item
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Visibility
        in: body
        name: visibility
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Shopping item updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update shopping item
      tags:
      - shopping
  /shopping/archived:
    get:
      consumes:
      - application/json
      description: Get archived shopping items by user ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.ShoppingItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get archived shopping items by user ID
      tags:
      - shopping
  /shopping/buyer/{id}:
    put:
      consumes:
      - application/json
      description: Update buyer ID
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Buyer ID
        in: body
        name: buyer_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Shopping item updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update buyer ID
      tags:
      - shopping
  /shopping/cancel_reserved/{id}:
    put:
      consumes:
      - application/json
      description: Cancel update reserved by
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Shopping item updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Cancel update reserved by
      tags:
      - shopping
  /shopping/private:
    get:
      consumes:
      - application/json
      description: Get private shopping items by created by
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.ShoppingItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get private shopping items by created by
      tags:
      - shopping
  /shopping/public:
    get:
      consumes:
      - application/json
      description: Get public shopping items by family ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.ShoppingItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get public shopping items by family ID
      tags:
      - shopping
  /shopping/reserved/{id}:
    put:
      consumes:
      - application/json
      description: Update reserved by
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Reserved by
        in: body
        name: reserved_by
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Shopping item updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update reserved by
      tags:
      - shopping
  /todo:
    post:
      consumes:
      - application/json
      description: Create todo
      parameters:
      - description: Family ID
        in: body
        name: family_id
        required: true
        schema:
          type: string
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Deadline
        in: body
        name: deadline
        required: true
        schema:
          type: string
      - description: Assigned to
        in: body
        name: assigned_to
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Todo created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create todo
      tags:
      - todo
  /todo/{id}:
    delete:
      consumes:
      - application/json
      description: Delete todo
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Todo deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete todo
      tags:
      - todo
    put:
      consumes:
      - application/json
      description: Update todo
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Title
        in: body
        name: title
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Deadline
        in: body
        name: deadline
        required: true
        schema:
          type: string
      - description: Assigned to
        in: body
        name: assigned_to
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Todo updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update todo
      tags:
      - todo
  /todo/assigned_to:
    get:
      consumes:
      - application/json
      description: Get todo by assigned to
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.TodoItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get todo by assigned to
      tags:
      - todo
  /todo/created_by:
    get:
      consumes:
      - application/json
      description: Get todo by created by
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.TodoItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get todo by created by
      tags:
      - todo
  /user:
    get:
      consumes:
      - application/json
      description: Get user info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get user info
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user info
      parameters:
      - description: Update user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update user info
      tags:
      - user
  /user/family_id:
    put:
      consumes:
      - application/json
      description: Reset user family id
      parameters:
      - description: Reset user family id
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.ResetFamilyIdInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Reset user family id
      tags:
      - user
  /user/location:
    put:
      consumes:
      - application/json
      description: Update user location
      parameters:
      - description: Update user location
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.UpdateLocationInput'
      produces:
      - application/json
      responses:
        "200":
          description: Location updated successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update user location
      tags:
      - user
  /wishlist:
    get:
      consumes:
      - application/json
      description: Get wishlist items by user ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.WishlistItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get wishlist items by user ID
      tags:
      - wishlist
    post:
      consumes:
      - application/json
      description: Create wishlist item
      parameters:
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Link
        in: body
        name: link
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Is Reserved
        in: body
        name: is_reserved
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "201":
          description: Wishlist item created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create wishlist item
      tags:
      - wishlist
  /wishlist/{id}:
    delete:
      consumes:
      - application/json
      description: Delete wishlist item
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Wishlist item deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Delete wishlist item
      tags:
      - wishlist
    get:
      consumes:
      - application/json
      description: Get wishlist items by user ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.WishlistItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get wishlist items by family user ID
      tags:
      - wishlist
    put:
      consumes:
      - application/json
      description: Update wishlist item
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: Description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Link
        in: body
        name: link
        required: true
        schema:
          type: string
      - description: Status
        in: body
        name: status
        required: true
        schema:
          type: string
      - description: Is Reserved
        in: body
        name: is_reserved
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Wishlist item updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update wishlist item
      tags:
      - wishlist
  /wishlist/{id}/cancel_reserved_by:
    put:
      consumes:
      - application/json
      description: Cancel update wishlist item reserved by
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Wishlist item updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Cancel update wishlist item reserved by
      tags:
      - wishlist
  /wishlist/{id}/reserved_by:
    put:
      consumes:
      - application/json
      description: Update wishlist item reserved by
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Reserved By
        in: body
        name: reserved_by
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Wishlist item updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update wishlist item reserved by
      tags:
      - wishlist
  /wishlist/archived:
    get:
      consumes:
      - application/json
      description: Get archived wishlist items by user ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.WishlistItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get archived wishlist items by user ID
      tags:
      - wishlist
swagger: "2.0"
